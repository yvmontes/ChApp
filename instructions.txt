https://drive.google.com/file/d/1w0xqF8ySLX29NuH-mwp0CaNJysO_3BU-/view

Heroku Video
https://www.youtube.com/watch?v=GgNcs9zlFSA&feature=youtu.be&list=PLOFmg4xbN_TPrB6w4rThsFanVxJI_SfER


Github / Heroku Guide
https://ucriverside.bootcampcontent.com/UC-Riverside-Coding-Boot-Camp/UCRS201901FSF3/tree/master/Activities/Project%202%20-%20GithubHeroku


Instructions
* One group member should create a new Github repo for the project.

* Protect the repo's master branch as we did during project 1.

  * Once at the repo's page, click the "Settings" tab.

  * Select "Branches" from the left sidebar.

  * Under "Branch protection rules", choose "master" from the dropdown.

  * Check off the following options:

    * "Protect this branch"

    * "Require pull request reviews before merging"

    * "Include administrators"

    * "Require status checks to pass before merging"

    * "Require branches to be up to date before merging"

  * Click "Save changes"

* Once complete, invite the other group members as collaborators.

* Upon creation of your repository, we would like you and your group to then create a Heroku application and connect your GitHub Repository for automatic deployment.

  * We have created a written guide and video guide on how you can link your GitHub Repo to your Heroku Application for continuous deployment which your instructor will provide.

• Once connection is complete, link your Heroku Applications live link to your TAs.




ZIPPED FILE/SKELETON
* Only one member of each group should complete this activity while the others watch.

* Copy the entire  folder to another location on your computer,  wherever you would like your local copy of the group project to be.

* Rename the copied "Unsolved" folder to the name of your project.

* Open the copied project folder's `package.json` file and change its `name` property to the name of your project, e.g. `bathroom-finder-v2`. If you're unsure now, leave this field as is &mdash; it can be changed later.

* CD to the root of the copied project folder with your terminal and run the following commands:

  git init
  git add .
  git commit -m "Initial commit"

* Then copy the GitHub repo's remote SSH URL (the same URL you'd use to clone the repo).

* Run the following commands in your terminal, replacing <remote-url> with your GitHub repo's remote SSH URL. or HTTPS URL

  git remote add origin <remote-url>
  git push origin master

* If completed successfully you should see all of the files uploaded to GitHub.

* All other group members should now clone the repo.

* Discuss as a group:

  * How would you now add changes to this project?



  PLOFmg4xbN_TPrB6w4rThsFanVxJI_SfER* Only the owner of the project repo should complete this activity, other group members should watch.

* **Part 1**: Protecting Master

* Before we can set up Travis, we must configure the project repo to protect the master branch.

* Navigate to the repo's page, then click the "Settings" tab.

* Select "Branches" from the left sidebar.

* Under "Branch protection rules", choose "master" from the drop-down.

* Check off the following options:

  * "Protect this branch"

  * "Require pull request reviews before merging"

  * "Include administrators"

  * "Require status checks to pass before merging"

  * "Require branches to be up to date before merging"

* Click "Save changes"

* **Part 2**: Add Travis

* Navigate to <https://github.com/marketplace/travis-ci>.

* Select the option to "Set up a new plan" and choose the $0 "Open Source" plan when prompted.

* Click "Install it for free" and then on the next page click "Complete order and begin installation".

* On the next page select the radio button that reads "Only select repositories".

* From the "Select repositories" drop-down, choose your project repo.

• Click the "Install" button to complete the process.